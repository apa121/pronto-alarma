#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('alarma:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

var PORT = 6306;
// var HOST = '192.168.0.9';
var HOST = '127.0.0.1';
var fs = require('fs');
var dgram = require('dgram');
var updServer = dgram.createSocket('udp4');
var io = require('socket.io')(server);

updServer.on('listening', function () {
    var address = updServer.address();
    console.log('UDP Server listening on ' + address.address + ":" + address.port);
});
// 152.200.123.30:20281 -  ALARMA 0802 DEL 5025536637
// It's saved! in same location.
// 152.200.123.30:20282 -  PETICI0N 0802 DEL 3163142547
updServer.on('message', function (message, remote) {
  var str = remote.address + ':' + remote.port +' - ' + message;
  if(message.indexOf('ALARMA')> -1){
    var parts = message.toString().split(' ');
    console.log('part:'+parts[parts.length-1]);
    io.emit('alarmaevent', { from: parts[parts.length-1] });
  }
    console.log(str);

    fs.writeFile('data/message.txt', str, function (err) {
        if (err) throw err;
        console.log('It\'s saved! in same location.');
    });

});

updServer.bind(PORT, HOST);
